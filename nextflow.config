
manifest {
    author = 'David Twesigomwe'
    description = 'StellarPGx long-read-based pipeline. Model gene: CYP2D6'
    mainScript = 'main.nf'
    version = '1.0'
}



params {
// User-defined parameters

   // reference genome
   ref_file = "/path/to/ref.fa"  // .fai index should be in the same folder


   // BAM/CRAM file(s) and respective indexes 
       // example1 (single sample): /path/to/data/GeT-RM/NA12878*{bam,bai}
       // example2 (multiple samples): /path/to/data/GeT-RM/*{bam,bai}
       // example3 (CRAM files): /path/to/data/GeT-RM/HG*{cram,crai}

   in_bam = "/path/to/Sample*{bam,bai}" 
   
   // Output directoy (Default is $PWD/results). User-defined path should be an absolute path
   out_dir = "$PWD/results"
   

   // DO NOT modify these lines  
   gene = "cyp2d6"
   db_init = "$PWD/database"
   res_init = "$PWD/resources"
   caller_init = "$PWD/scripts"

}


singularity {
    enabled = false
    autoMounts = true
    cacheDir = "$PWD/containers"
    runOptions = " --cleanenv"
}

// To use Docker, set "enabled" to "true" and do the opposite to the singularity config above. Also remember to change the container path in the process config below to point to the Docker container rather than Singularity. 

docker {
    enabled = false // change to true when using Docker
    runOptions = '-u \$(id -u):\$(id -g)'
}



process {

    // ALL PROCESSES
    cache = true
    stageInMode = 'symlink'
    stageOutMode = 'rsync'
   // scratch = "$HOME/tmp"  // clean this regularly

    // Containers

    // Singularity
    // container = "$PWD/containers/stellarpgx-dev.sif"
    
    // Docker
    // container = "twesigomwedavid/stellarpgx-docker:latest" // Note that this Docker build needs to be pulled from Docker Hub

//    withName: call_snvs {
//        singularity.enabled = false

//    }


//   withName: phase_snvs {
//       singularity.enabled = false
//   }

   withLabel: test2 {
       singularity.enabled = true
       container = "$PWD/containers/stellarpgx-dev.sif"
   }

}


profiles {


    // Local machine (MacOS, Linux, cluster node etc)
    standard { 
        process.executor = 'local'
    }

    // SLURM scheduler
    slurm { 
        process.executor = 'slurm'
        process.queue = 'batch'
    } 

    // Other scheduler
    // sheduler_name {
    //	process.executor = 'sheduler_name'
    //	process.queue = 'batch'
    //}

    // test { includeConfig "$PWD/tests/config/test.config" }

}
